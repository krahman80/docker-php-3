version: '3.9'

services:
  app:
    build:
      args:
      # replace with your user and uid
        user: rahman
        uid: 1000
      context: .
      dockerfile: ./docker/server/Dockerfile
    container_name: 'app'
    ports:
      - '8020:80'
    working_dir: /var/www/html
    volumes:
      - ./app:/var/www/html
      - ./docker/server/apache/sites-enabled:/etc/apache2/sites-enabled
      - ./docker/server/php/php.ini:/usr/local/etc/php/conf.d/extra-php-config.ini
      - ./docker/server/php/opcache.ini:/usr/local/etc/php/conf.d/docker-php-ext-opcache.ini
    networks:
      - proxynet

networks:
  proxynet:
    name: mynet

  # postgres:
  #   image: postgres:10.6-alpine
  #   restart: always
  #   container_name: postgres
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=postgres
  #   hostname: postgres
  #   logging:
  #     options:
  #       max-size: 10m
  #       max-file: "3"
  #   ports:
  #     - '5438:5432'
  #   volumes: 
  #     - db_data:/var/lib/postgresql/data
  #     # - ./.docker/db/sql:/docker-entrypoint-initdb.d
  #   networks:
  #     - proxynet

  # maria-db:
  #   image: mariadb:10.5.9
  #   container_name: 'maria-db'
  #   restart: always
  #   ports:
  #     - '8040:3306'
  #   environment:
  #     MYSQL_ROOT_PASSWORD: 'secret'
  #     MYSQL_USER: 'homestead'
  #     MYSQL_PASSWORD: 'secret'
  #     MYSQL_DATABASE: 'homestead'
  #   volumes:
  #     - db_data:/var/lib/mysql
  #     # - './docker/db/db_data:/var/lib/mysql'
  #     - ./docker/db/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf
  #   networks:
  #     - proxynet

  # adminer:
  #   image: adminer
  #   container_name: adminer
  #   restart: unless-stopped
  #   depends_on:
  #     - mariadb
  #   environment:
  #     ADMINER_DEFAULT_DB_DRIVER: mysql
  #     ADMINER_DEFAULT_DB_HOST: mariadb
  #     # ADMINER_DEFAULT_DB_NAME: homestead
  #     # ADMINER_DEFAULT_SERVER: mariadb
  #     ADMINER_DESIGN: nette
  #     ADMINER_PLUGINS: tables-filter tinymce
  #   ports:
  #     - 8030:8080
  #   networks:
  #     - proxynet

# volumes:
#   db_data: